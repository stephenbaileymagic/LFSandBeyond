#Instructions for building the initial toolchain
#This was done with a lot of cut and pasting and hand typed glue in between
#Wants: exception handing, automatic creation of the repetetive segments


#Binutils-2.34
tar -xf binutils-2.34.tar.xz

cd binutils-2.34

mkdir -v build
cd       build
../configure --prefix=/tools            \
             --with-sysroot=$LFS        \
             --with-lib-path=/tools/lib \
             --target=$LFS_TGT          \
             --disable-nls              \
             --disable-werror
make
make install

cd ../..
rm -rf binutils-2.34

#Gcc-9.2.0 first pass
tar -xf gcc-9.2.0.tar.xz

cd gcc-9.2.0

tar -xf ../mpfr-4.0.2.tar.xz
mv -v mpfr-4.0.2 mpfr
tar -xf ../gmp-6.2.0.tar.xz
mv -v gmp-6.2.0 gmp
tar -xf ../mpc-1.1.0.tar.gz
mv -v mpc-1.1.0 mpc
for file in gcc/config/{linux,i386/linux{,64}}.h
do
  cp -uv $file{,.orig}
  sed -e 's@/lib\(64\)\?\(32\)\?/ld@/tools&@g' \
      -e 's@/usr@/tools@g' $file.orig > $file
  echo '
#undef STANDARD_STARTFILE_PREFIX_1
#undef STANDARD_STARTFILE_PREFIX_2
#define STANDARD_STARTFILE_PREFIX_1 "/tools/lib/"
#define STANDARD_STARTFILE_PREFIX_2 ""' >> $file
  touch $file.orig
done

mkdir -v build
cd       build

../configure                                       \
    --target=$LFS_TGT                              \
    --prefix=/tools                                \
    --with-glibc-version=2.11                      \
    --with-sysroot=$LFS                            \
    --with-newlib                                  \
    --without-headers                              \
    --with-local-prefix=/tools                     \
    --with-native-system-header-dir=/tools/include \
    --disable-nls                                  \
    --disable-shared                               \
    --disable-multilib                             \
    --disable-decimal-float                        \
    --disable-threads                              \
    --disable-libatomic                            \
    --disable-libgomp                              \
    --disable-libquadmath                          \
    --disable-libssp                               \
    --disable-libvtv                               \
    --disable-libstdcxx                            \
    --enable-languages=c,c++

make
make install

cd ../..
rm -rf gcc-9.2.0

#Linux headers
tar -xf linux-5.5.3.tar.xz

cd linux-5.5.3

make mrproper
make headers
cp -rv usr/include/* /tools/include

cd ..
rm -rf linux-5.5.3

#glibc-2.3.1

tar -xf glibc-2.31.tar.xz
cd glibc-2.31

mkdir -v build
cd       build

../configure                             \
      --prefix=/tools                    \
      --host=$LFS_TGT                    \
      --build=$(../scripts/config.guess) \
      --enable-kernel=3.2                \
      --with-headers=/tools/include

make
make install

echo 'int main(){}' > dummy.c
$LFS_TGT-gcc dummy.c
readelf -l a.out | grep ': /tools'

rm -v dummy.c a.out

cd ../..
rm -rf glibc-2.31

#libstdc++
tar -xf gcc-9.2.0.tar.xz
cd gcc-9.2.0

mkdir -v build
cd       build
../libstdc++-v3/configure           \
    --host=$LFS_TGT                 \
    --prefix=/tools                 \
    --disable-multilib              \
    --disable-nls                   \
    --disable-libstdcxx-threads     \
    --disable-libstdcxx-pch         \
    --with-gxx-include-dir=/tools/$LFS_TGT/include/c++/9.2.0

make
make install

cd ../..
rm -rf gcc-9.2.0

#Binutils-2.34 Pass two

tar -xf binutils-2.34.tar.xz
cd binutils-2.34

mkdir -v build
cd       build

CC=$LFS_TGT-gcc                \
AR=$LFS_TGT-ar                 \
RANLIB=$LFS_TGT-ranlib         \
../configure                   \
    --prefix=/tools            \
    --disable-nls              \
    --disable-werror           \
    --with-lib-path=/tools/lib \
    --with-sysroot

make
make install

make -C ld clean
make -C ld LIB_PATH=/usr/lib:/lib
cp -v ld/ld-new /tools/bin

cd ../..
rm -rf binutils-2.34

#Gcc-9.20 pass two
tar -xf gcc-9.2.0.tar.xz
cd gcc-9.2.0

cat gcc/limitx.h gcc/glimits.h gcc/limity.h > \
  `dirname $($LFS_TGT-gcc -print-libgcc-file-name)`/include-fixed/limits.h

for file in gcc/config/{linux,i386/linux{,64}}.h
do
  cp -uv $file{,.orig}
  sed -e 's@/lib\(64\)\?\(32\)\?/ld@/tools&@g' \
      -e 's@/usr@/tools@g' $file.orig > $file
  echo '
#undef STANDARD_STARTFILE_PREFIX_1
#undef STANDARD_STARTFILE_PREFIX_2
#define STANDARD_STARTFILE_PREFIX_1 "/tools/lib/"
#define STANDARD_STARTFILE_PREFIX_2 ""' >> $file
  touch $file.orig
done

tar -xf ../mpfr-4.0.2.tar.xz
mv -v mpfr-4.0.2 mpfr
tar -xf ../gmp-6.2.0.tar.xz
mv -v gmp-6.2.0 gmp
tar -xf ../mpc-1.1.0.tar.gz
mv -v mpc-1.1.0 mpc

sed -e '1161 s|^|//|' \
    -i libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc

mkdir -v build
cd       build
CC=$LFS_TGT-gcc                                    \
CXX=$LFS_TGT-g++                                   \
AR=$LFS_TGT-ar                                     \
RANLIB=$LFS_TGT-ranlib                             \
../configure                                       \
    --prefix=/tools                                \
    --with-local-prefix=/tools                     \
    --with-native-system-header-dir=/tools/include \
    --enable-languages=c,c++                       \
    --disable-libstdcxx-pch                        \
    --disable-multilib                             \
    --disable-bootstrap                            \
    --disable-libgomp

make
make install


ln -sv gcc /tools/bin/cc

echo 'int main(){}' > dummy.c
cc dummy.c
readelf -l a.out | grep ': /tools'

rm -v dummy.c a.out

cd ../..
rm -rf gcc-9.20

#Tcl-8.6.10

tar -xf tcl8.6.10-src.tar.gz
cd tcl8.6.10

cd unix
./configure --prefix=/tools
make
make install
chmod -v u+w /tools/lib/libtcl8.6.so
make install-private-headers
ln -sv tclsh8.6 /tools/bin/tclsh

cd ../..
rm -rf tcl8.6.10

#install expect-5.45.4

tar -xf expect5.45.4.tar.gz
cd expect5.45.4

cp -v configure{,.orig}
sed 's:/usr/local/bin:/bin:' configure.orig > configure
./configure --prefix=/tools       \
            --with-tcl=/tools/lib \
            --with-tclinclude=/tools/include

make

make SCRIPTS="" install

cd ..
rm -rf expect5.45.4

#DejaGnu-1.6.2
tar -xf dejagnu-1.6.2.tar.gz
cd dejagnu-1.6.2

./configure --prefix=/tools

make install

cd ..
rm -rf dejagnu-1.6.2

#M4-1.4.18
tar -xf m4-1.4.18.tar.xz
cd m4-1.4.18

sed -i 's/IO_ftrylockfile/IO_EOF_SEEN/' lib/*.c
echo "#define _IO_IN_BACKUP 0x100" >> lib/stdio-impl.h

./configure --prefix=/tools

make

make install

cd ..
rm -rf m4-1.4.18

#Ncurses-6.2

tar -xf ncurses-6.2.tar.gz
cd ncurses-6.2

sed -i s/mawk// configure

./configure --prefix=/tools \
            --with-shared   \
            --without-debug \
            --without-ada   \
            --enable-widec  \
            --enable-overwrite

make

make install
ln -s libncursesw.so /tools/lib/libncurses.so

cd ..
rm -rf ncurses-6.2

#Bash-5.0

tar -xf bash-5.0.tar.gz
cd bash-5.0

./configure --prefix=/tools --without-bash-malloc

make

make install

ln -sv bash /tools/bin/sh

cd ..

rm -rf bash-5.0

#Bison -3.5.2

tar -xf bison-3.5.2.tar.xz
cd bison-3.5.2

./configure --prefix=/tools

make

make install

cd ..
rm -rf bison-3.5.2

#Bzip2-1.0.8

tar -xf bzip2-1.0.8.tar.gz
cd bzip2-1.0.8

make -f Makefile-libbz2_so
make clean
make

make PREFIX=/tools install
cp -v bzip2-shared /tools/bin/bzip2
cp -av libbz2.so* /tools/lib
ln -sv libbz2.so.1.0 /tools/lib/libbz2.so

cd ..
rm -rf bzip2-1.0.8

#Coreutils-8.31
tar -xf coreutils-8.31.tar.xz
cd coreutils-8.31

./configure --prefix=/tools --enable-install-program=hostname

make
make install

cd ..
rm -rf coreutils-8.31

#Diffutils-3.7

tar -xf diffutils-3.7.tar.xz
cd diffutils-3.7

./configure --prefix=/tools

make

make install

cd ..
rm -rf diffutils-3.7

#File-5.38

tar -xf file-5.38.tar.gz
cd file-5.38

./configure --prefix=/tools

make

make install

cd ..

rm -rf file-5.38

#Findutils-4.70
tar -xf findutils-4.7.0.tar.xz
cd findutils-4.7.0

./configure --prefix=/tools
make
make install

cd ..
rm -rf findutils-4.7.0

#Gawk-5.0.1

tar -xf gawk-5.0.1.tar.xz
cd gawk-5.0.1

./configure --prefix=/tools
make 
make install

cd ..
rm -rf gawk-5.0.1

#Gettext-0.20.1

tar -xf gettext-0.20.1.tar.xz
cd gettext-0.20.1

./configure --disable-shared
make
cp -v gettext-tools/src/{msgfmt,msgmerge,xgettext} /tools/bin

cd ..
rm -rf gettext-0.20.1

#Grep-3.4
tar -xf grep-3.4.tar.xz
cd grep-3.4

./configure --prefix=/tools
make
make install

cd ..
rm -rf grep-3.4

#Gzip-1.10

tar -xf gzip-1.10.tar.xz
cd gzip-1.10

./configure --prefix=/tools

make
make install

cd ..
rm -rf gzip-1.10

#Make-4.3
tar -xf make-4.3.tar.gz
cd make-4.3

./configure --prefix=/tools --without-guile
make
make install

cd ..
rm -rf make-4.3

#Patch-2.7.6
tar -xf patch-2.7.6.tar.xz
cd patch-2.7.6

./configure --prefix=/tools
make
make install

cd ..
rm -rf patch-2.7.6

#Perl-5.30.1

tar -xf perl-5.30.1.tar.xz
cd perl-5.30.1

sh Configure -des -Dprefix=/tools -Dlibs=-lm -Uloclibpth -Ulocincpth

make

cp -v perl cpan/podlators/scripts/pod2man /tools/bin
mkdir -pv /tools/lib/perl5/5.30.1
cp -Rv lib/* /tools/lib/perl5/5.30.1

cd ..
rm -rf perl-5.30.1

#Python-3.8.1

tar -xf Python-3.8.1.tar.xz
cd Python-3.8.1

sed -i '/def add_multiarch_paths/a \        return' setup.py

./configure --prefix=/tools --without-ensurepip
make
make install

cd ..
rm -rf Python-3.8.1

#Sed-4.8

tar -xf sed-4.8.tar.xz
cd sed-4.8

./configure --prefix=/tools
make
make install

cd ..
rm -rf sed-4.8

#Tar-1.32

tar -xf tar-1.32.tar.xz
cd tar-1.32

./configure --prefix=/tools
make
make install

cd ..
rm -rf tar-1.32

#Texinfo-6.7

tar -xf texinfo-6.7.tar.xz
cd texinfo-6.7

./configure --prefix=/tools
make
make install

cd ..
rm -rf texinfo-6.7

#Xz-5.2.4

tar -xf xz-5.2.4.tar.xz
cd xz-5.2.4

./configure --prefix=/tools
make
make install

cd ..
rm -rf xz-5.2.4

echo "Temp Toolchain Installed"
